K-means分群法
wineUrl <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data'
wine <- read.table(wineUrl, header = FALSE, sep = ',',
+                      stringsAsFactors = FALSE,
+                      col.names = c('Cultivar','Alcohol','Malic.acid','Ash',
                      'Alcalinity.of.ash','Magnesium','Total.phenols','Flavanoids',
                      'Nonflavanoid.phenols', 'Proanthocyanin','Color.intensity','Hue',
                      'OD280.OD315.of.diluted.wines','Proline'))
head(wine)
 Cultivar Alcohol Malic.acid  Ash Alcalinity.of.ash Magnesium Total.phenols
1        1   14.23       1.71 2.43              15.6       127          2.80
2        1   13.20       1.78 2.14              11.2       100          2.65
3        1   13.16       2.36 2.67              18.6       101          2.80
4        1   14.37       1.95 2.50              16.8       113          3.85
5        1   13.24       2.59 2.87              21.0       118          2.80
6        1   14.20       1.76 2.45              15.2       112          3.27
  Flavanoids Nonflavanoid.phenols Proanthocyanin Color.intensity  Hue
1       3.06                 0.28           2.29            5.64 1.04
2       2.76                 0.26           1.28            4.38 1.05
3       3.24                 0.30           2.81            5.68 1.03
4       3.49                 0.24           2.18            7.80 0.86
5       2.69                 0.39           1.82            4.32 1.04
6       3.39                 0.34           1.97            6.75 1.05
  OD280.OD315.of.diluted.wines Proline
1                         3.92    1065
2                         3.40    1050
3                         3.17    1185
4                         3.45    1480
5                         2.93     735
6                         2.85    1450
wineTrain <- wine[, which(names(wine) != "Cultivar")]
set.seed(278613)
wineK3 <- kmeans(x = wineTrain, center =3)
wineK3
K-means clustering with 3 clusters of sizes 28, 50, 100

Cluster means:
   Alcohol Malic.acid    Ash Alcalinity.of.ash Magnesium Total.phenols Flavanoids
1 13.82214   1.773929 2.4900          16.96429  105.3571      2.923929   3.111429
2 13.33680   2.396800 2.3718          18.51000  108.6000      2.432400   2.214800
3 12.60250   2.463600 2.3293          20.69600   93.7400      2.050400   1.633500
  Nonflavanoid.phenols Proanthocyanin Color.intensity      Hue
1            0.2985714       1.986786        6.202857 1.103571
2            0.3236000       1.707200        5.143600 0.966720
3            0.3987000       1.421900        4.694800 0.911900
  OD280.OD315.of.diluted.wines Proline
1                     2.984643 1301.50
2                     2.862800  894.60
3                     2.381700  517.75

Clustering vector:
  [1] 2 2 1 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 2 1 2 2
 [41] 2 2 2 3 2 2 2 2 2 1 1 1 1 1 2 1 2 1 1 3 3 3 3 3 3 3 3 3 2 2 2 3 3 2 2 3 3 3 2 3
 [81] 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[121] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 2 3 3 2 2 3 3 3 3 3 3 3 3 3 2 3 2 3 3
[161] 3 3 3 3 3 3 3 3 2 3 3 3 3 2 2 2 2 3

Within cluster sum of squares by cluster:
[1]  550201.0  815783.7 1263330.5
 (between_SS / total_SS =  85.1 %)

Available components:

[1] "cluster"      "centers"      "totss"        "withinss"     "tot.withinss"
[6] "betweenss"    "size"         "iter"         "ifault"  

library(useful)
plot(wineK3, data = wineTrain)
![image](https://github.com/kysukuyu/R/blob/main/K-Means Results.gif)

plot(wineK3, data = wine, class = "Cultivar")
![image](https://github.com/kysukuyu/R/blob/main/K-Means Results2.gif)

set.seed(278613)
wineK3N25 <- kmeans(wineTrain, center = 3, nstart=25)
wineK3$size
[1]  28  50 100
wineK3N25$size
[1] 62 69 47
wineBest <- FitKMeans(wineTrain, max.clusters = 20, nstart=25,seed=278613)
wineBest
 Clusters   Hartigan AddCluster
1         2 505.429310       TRUE
2         3 160.411331       TRUE
3         4 135.707228       TRUE
4         5  78.445289       TRUE
5         6  71.489710       TRUE
6         7  96.657223       TRUE
7         8  47.521525       TRUE
8         9  33.198650       TRUE
9        10  40.244743       TRUE
10       11  28.928383       TRUE
11       12  15.903544       TRUE
12       13  17.083783       TRUE
13       14  24.998172       TRUE
14       15  14.809907       TRUE
15       16  15.765533       TRUE
16       17   1.987005      FALSE
17       18  14.165725       TRUE
18       19   6.225141      FALSE
19       20  51.175564       TRUE
PlotHartigan(wineBest)
![image](https://github.com/kysukuyu/R/blob/main/Hartigan's Rule.gif)

table(wine$Cultivar, wineK3N25$cluster)
  1  2  3
  1 13  0 46
  2 20 50  1
  3 29 19  0
plot(table(wine$Cultivar, wineK3N25$cluster),
+     main="Confusion Matrix for Wine Clustering",
+     xlab="Cultivar", ylab="Culster")
![image](https://github.com/kysukuyu/R/blob/main/confusion matrix.gif)

library(cluster)
theGap <- clusGap(wineTrain, FUNcluster = pam, K.max=20)
Clustering k = 1,2,..., K.max (= 20): .. done
Bootstrapping, b = 1,2,..., B (= 100)  [one "." per sample]:
.................................................. 50 
.................................................. 100 
 gapDF <- as.data.frame(theGap$Tab)
 gapDF
        logW   E.logW       gap     SE.sim
1  9.655294 9.939941 0.2846472 0.03514345
2  8.987942 9.255181 0.2672389 0.03329494
3  8.617563 8.870678 0.2531152 0.02869671
4  8.370194 8.587259 0.2170650 0.03116535
5  8.193144 8.387801 0.1946568 0.02820239
6  7.979259 8.236368 0.2571090 0.02988772
7  7.819287 8.098896 0.2796087 0.03104365
8  7.685612 7.991956 0.3063439 0.02629217
9  7.591487 7.899753 0.3082661 0.02329127
10 7.496676 7.820809 0.3241326 0.02353644
11 7.398811 7.752443 0.3536316 0.02285021
12 7.340516 7.692275 0.3517596 0.02365140
13 7.269456 7.640784 0.3713283 0.02412040
14 7.224292 7.593502 0.3692103 0.02428222
15 7.157981 7.551405 0.3934239 0.02679342
16 7.104300 7.511463 0.4071627 0.02767741
17 7.054116 7.475877 0.4217612 0.02774118
18 7.006179 7.439694 0.4335148 0.02724484
19 6.971455 7.406621 0.4351667 0.02809914
20 6.932463 7.374723 0.4422595 0.02842890

require(ggplot2)
ggplot(gapDF, aes(x=1:nrow(gapDF)))+
+  geom_line(aes(y=logW), color="blue")+
+  geom_point(aes(y=logW), color="blue")+
+  geom_line(aes(y=E.logW), color="green")+
+  geom_point(aes(y=E.logW), color="green")+
+  labs(x="Number of Cluster")
![image](https://github.com/kysukuyu/R/blob/main/logW.gif)

